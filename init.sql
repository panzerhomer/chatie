CREATE TABLE employees (
  employee_id bigserial PRIMARY KEY,
  position varchar DEFAULT 'candidate', -- set by users of product, it's user's tag
  email varchar NOT NULL UNIQUE,
  status varchar DEFAULT 'active', -- empty, banned, active
  confirmed boolean DEFAULT false,
  created_at timestamp DEFAULT now(),
  updated_at timestamp DEFAULT now()
  -- FOREIGN KEY (email) REFERENCES users (email)
);

CREATE TABLE users (
  user_id bigserial PRIMARY KEY,
  username varchar NOT NULL UNIQUE, -- generates automatically
  firstname varchar DEFAULT '',
  lastname varchar DEFAULT '',
  patronymic varchar DEFAULT '',
  avatar varchar,
  email varchar NOT NULL UNIQUE,
  password varchar(255) NOT NULL,
  role varchar DEFAULT 'user', -- user, admin
  created_at timestamp DEFAULT now(),
  updated_at timestamp DEFAULT now()
  -- employee_id bigint,
  -- FOREIGN KEY (employee_id) REFERENCES employees (employee_id)
);

CREATE TABLE files (
  file_id bigserial PRIMARY KEY,
  author_id bigint,
  file_name varchar,
  file_type varchar,
  file_size int,
  storage_path varchar,
  created_at timestamp DEFAULT now(),
  FOREIGN KEY (author_id) REFERENCES users (user_id)
);

CREATE TABLE chats (
  chat_id bigserial PRIMARY KEY,
  owner_id bigint NOT NULL,
  info varchar NOT NULL DEFAULT '',
  description varchar DEFAULT '',
  is_private boolean NOT NULL,
  created_at timestamp DEFAULT NOW(),
  updated_at timestamp DEFAULT NOW(),
  link VARCHAR DEFAULT '',
  is_deleted bool DEFAULT false,
  FOREIGN KEY (owner_id) REFERENCES users (user_id)
);

CREATE TABLE chat_members (
  chat_id bigint,
  user_id bigint,
  user_role varchar NOT NULL, -- owner, admin, user
  status varchar NOT NULL, -- banned, unbanned
  joined_at timestamp DEFAULT NOW(),
  banned_at timestamp DEFAULT NOW(),
  is_deleted bool DEFAULT false,
  PRIMARY KEY (chat_id, user_id),
  FOREIGN KEY (user_id) REFERENCES users (user_id)
);

CREATE TABLE messages (
  message_id bigserial PRIMARY KEY,
  text varchar,
  from_id bigint,
  to_id bigint,
  chat_id bigint,
  attachment_ids bigint[],
  is_deleted boolean DEFAULT false,
  created_at timestamp DEFAULT now(),
  updated_at timestamp DEFAULT now(),
  FOREIGN KEY (from_id) REFERENCES users (user_id),
  FOREIGN KEY (chat_id) REFERENCES chats (chat_id)
);

-- CREATE TABLE IF NOT EXISTS auth.session
-- (
--   id        INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
--   sessionid TEXT NOT NULL,
--   userid    INT REFERENCES auth.person (id)
-- );

CREATE TABLE folders (
  folder_id bigserial PRIMARY KEY,
  user_id bigint,
  folder_name varchar,
  chat_ids bigint[], -- denormolize 
  created_at timestamp DEFAULT now(),
  updated_at timestamp DEFAULT now(),
  FOREIGN KEY (from_id) REFERENCES users (user_id),
);

-- CREATE TABLE channels (
--   channel_id bigserial PRIMARY KEY,
--   info varchar,
--   author_id bigint,
--   is_deleted boolean,
--   created_at timestamp,
--   updated_at timestamp
-- );

-- CREATE TABLE channel_members (
--   channel_id bigint,
--   user_id bigint,
--   user_role varchar,
--   status varcahr,
--   joined_at timestamp,
--   banned_at timestamp,
--   PRIMARY KEY (channel_id, user_id)
-- );

-- ALTER TABLE users ADD FOREIGN KEY (email) REFERENCES employees (email);

-- ALTER TABLE files ADD FOREIGN KEY (author_id) REFERENCES users (user_id);

-- ALTER TABLE chat_members ADD FOREIGN KEY (chat_id) REFERENCES chats (chat_id);

-- ALTER TABLE chat_members ADD FOREIGN KEY (user_id) REFERENCES users (user_id);

-- ALTER TABLE messages ADD FOREIGN KEY (from_id) REFERENCES users (user_id);

-- ALTER TABLE messages ADD FOREIGN KEY (chat_id) REFERENCES chats (chat_id);

-- ALTER TABLE folders ADD FOREIGN KEY (user_id) REFERENCES users (user_id);

-- ALTER TABLE channel_members ADD FOREIGN KEY (user_id) REFERENCES users (user_id);

-- ALTER TABLE channels ADD FOREIGN KEY (author_id) REFERENCES users (user_id);

-- ALTER TABLE channel_members ADD FOREIGN KEY (channel_id) REFERENCES channels (channel_id);
